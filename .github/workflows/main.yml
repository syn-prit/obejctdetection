name: main
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Upload html test report
        uses: actions/upload-artifact@v2
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html

  # unit-test:
  #   needs: [lint]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout the code
  #       uses: actions/checkout@v2

  #     - name: Run tests
  #       run: ./gradlew test

  #     - name: Upload test report
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: unit_test_report
  #         path: app/build/reports/tests/testDebugUnitTest/

  # instrumentation-test:
  #   needs: [lint]
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout the code
  #       uses: actions/checkout@v2

  #     - name: Run espresso tests
  #       uses: reactivecircus/android-emulator-runner@v2
  #       with:
  #         api-level: 29
  #         script: ./gradlew connectedCheck

  #     - name: Upload test report
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: instrumentation_test_report
  #         path: app/build/reports/androidTests/connected/

  static-code-analysis:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.ee34235d598520bbc4f76e17fea6b0989948d983 }}
        run: ./gradlew build sonar --info

  package:
    needs: [static-code-analysis]
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: expense-manager.apk
          path: app/build/outputs/apk/debug/app-debug.apk
